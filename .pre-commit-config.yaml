# .pre-commit-config.yaml
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace # Removes trailing whitespace
      - id: end-of-file-fixer # Ensures files end with a newline
      - id: check-yaml # Validates yaml syntax
      - id: check-toml # Validates toml syntax
      - id: check-added-large-files # Prevents giant files from being committed
        args: ["--maxkb=500"]
      - id: check-case-conflict # Checks for files that would conflict in case-insensitive filesystems
      - id: check-merge-conflict # Checks for files containing merge conflict strings
      - id: detect-private-key # Checks for presence of private keys
      - id: debug-statements # Checks for debugger imports and py37+ `breakpoint()` calls

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.14
    hooks:
      - id: ruff # Run the ruff linter
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format # Run the ruff formatter

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies:
          [
            "types-requests",
            "types-PyYAML",
            "types-python-dateutil",
            "pydantic",
          ]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  - repo: https://github.com/python-poetry/poetry
    rev: "1.7.0"
    hooks:
      - id: poetry-check # Validates pyproject.toml

  - repo: https://github.com/PyCQA/bandit
    rev: "1.7.6"
    hooks:
      - id: bandit # Finds common security issues
        args: ["-ll"] # Set to low level
        files: '^sg_open_data/.*\.py$'

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit]
